{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["theme","global","colors","brand","focus","font","family","size","height","defaultValue","originplace","destinationplace","inbound","outbound","AppBar","props","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","myCurrency","App","state","showSidebar","value","flights","originVal","currency","currencyFormLabel","currencySymbol","airportNames","currencyArr","value2","create","bind","createSuggestions","createCurrency","suggestCurrency","e","substr","indexOf","fetch","this","then","response","json","console","log","newFlights","i","Carriers","length","newFlight","carrier","price","Name","Quotes","MinPrice","name","Places","symbol","IataCode","push","setState","catch","err","newAirportNames","suggestions","PlaceName","PlaceId","Currencies","error","curr","item","Code","includes","toUpperCase","Grommet","full","ResponsiveContext","Consumer","fill","Heading","level","margin","Button","color","label","onClick","alignSelf","flex","overflow","horizontal","Form","onChange","onReset","event","onSubmit","gap","FormField","required","TextInput","DateInput","format","type","primary","map","flight","Card","basis","CardHeader","Text","weight","CardBody","Layer","icon","FormClose","Collapsible","open","width","newCurrency","find","newStr","Symbol","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b1cad15.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n Box,\n Button,\n Collapsible,\n Heading,\n Grommet,\n Layer,\n ResponsiveContext,\n Form,\n FormField,\n TextInput,\n DateInput,\n Card,\n CardHeader,\n CardBody,\n CardFooter,\n Text\n} from 'grommet';\nimport { FormClose, Configure, Ticket } from 'grommet-icons';\n\nconst theme = {\n  global: {\n    colors: {\n      brand: '#00739D',\n      focus: '#00739D'\n    },\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n};\n\nconst defaultValue = {\n  originplace: '',\n  destinationplace: '',\n  inbound: '',\n  outbound: '',\n};\n\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation='medium'\n    style={{ zIndex: '1' }}\n    {...props}\n  />\n);\n\nvar myCurrency = {}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      showSidebar: false,\n      value: defaultValue,\n      flights: [],\n      originVal: \"\",\n      currency: \"USD\",\n      currencyFormLabel: \"Select Currency (USD)\",\n      currencySymbol: \"$\",\n      airportNames: [],\n      currencyArr: [],\n      value2: {\n        currency: \"\"\n      },\n    }\n    this.create = this.create.bind(this);\n    this.createSuggestions = this.createSuggestions.bind(this);\n    this.createCurrency = this.createCurrency.bind(this);\n    this.suggestCurrency = this.suggestCurrency.bind(this);\n    this.createCurrency();\n  }\n\n  create(e) {\n    // get all entities - GET\n    const originplace = e.value.originplace.substr(e.value.originplace.indexOf(\"(\")+1, e.value.originplace.indexOf(\")\"));\n    const destinationplace = e.value.destinationplace.substr(e.value.destinationplace.indexOf(\"(\")+1, e.value.destinationplace.indexOf(\")\"));\n    const outbound = e.value.outbound.substr(0, e.value.outbound.indexOf('T'));\n    const inbound = \"/\" + e.value.inbound.substr(0, e.value.outbound.indexOf('T'));\n    fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/US/${this.state.currency}/en-US/${originplace}/${destinationplace}/${outbound}${inbound}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"ed870dc8bcmsheb9498735096d60p1ac767jsn0505c11878f0\"\n      }\n    })\n    .then(response => response.json())\n    .then(response => {\n      console.log(response);\n      var newFlights = [];\n      for(var i = 0; i<response.Carriers.length; i++){\n        var newFlight = {carrier: \"\", price: \"\"}\n        newFlight.carrier = response.Carriers[i].Name;\n        newFlight.price = response.Quotes[i].MinPrice;\n        newFlight.name = response.Places[0].Name;\n        newFlight.symbol = response.Places[0].IataCode;\n        newFlights.push(newFlight);\n      }\n      this.setState({\n        flights: newFlights,\n      });\n    })\n    .catch(err => { console.log(err);\n    });\n  }\n\n  createSuggestions(value){\n    fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?query=${value}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"2cb41ceb4bmsh64790deead62888p18e177jsn0e5c901f9ff5\",\n      \t\"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n      \t\"useQueryString\": true\n      }\n    })\n    .then(response => response.json())\n    .then(response => {\n      var newAirportNames = [];\n      var suggestions = response.Places;\n      for(var i = 0; i<suggestions.length; i++){\n        newAirportNames[i] = suggestions[i].PlaceName + \" (\" + suggestions[i].PlaceId + \")\";\n      }\n      this.setState({\n        airportNames: newAirportNames\n      })\n    })\n    .catch(err => { console.log(err);\n    });\n  }\n\n  createCurrency(){\n    fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/reference/v1.0/currencies`, {\n    \t\"method\": \"GET\",\n    \t\"headers\": {\n    \t\t\"x-rapidapi-key\": \"2cb41ceb4bmsh64790deead62888p18e177jsn0e5c901f9ff5\",\n    \t\t\"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\"\n    \t}\n    })\n    .then(response => response.json())\n    .then(response => {\n      myCurrency = response.Currencies;\n    })\n    .catch(err => {\n    \tconsole.error(err);\n    });\n  }\n\n  suggestCurrency(value){\n    var curr = []\n    for(var i=0; i<myCurrency.length; i++){\n      var item = myCurrency[i];\n      if(item.Code.includes(value.toUpperCase())){\n        curr.push(item.Code);\n      }\n      if(curr.length > 8) break;\n    };\n    console.log(curr);\n    this.setState({\n      currencyArr: curr\n    })\n  }\n\n  render() {\n    return (\n      <Grommet theme={theme} full>\n      <ResponsiveContext.Consumer>\n      {size => (\n        <Box fill>\n          <AppBar>\n            <Heading level='3' margin='none'>Flight-Saver</Heading>\n            <Button\n              color = \"light-1\"\n              label={this.state.currency}\n              onClick={() => {\n                this.setState({\n                  showSidebar: !this.state.showSidebar\n                })\n              }}\n            />\n          </AppBar>\n          <Box direction='row' alignSelf=\"center\" flex overflow={{ horizontal: 'hidden' }}>\n            <Box alignSelf=\"start\" justify='center' direction=\"row\" margin=\"medium\">\n              <Box direction=\"column\" justify='stretch'>\n                <Form\n                  value={this.state.value}\n                  onChange={value => {\n                    if(this.state.originVal !== value.originplace) this.createSuggestions(value.originplace);\n                    else this.createSuggestions(value.destinationplace);\n                    this.setState({\n                      value: value,\n                      originVal: value.originplace\n                    });\n                  }}\n                  onReset={event => {\n                    this.setState({\n                      value: defaultValue\n                    })\n                  }\n                  }\n                  onSubmit={event =>\n                    {\n                      this.create(event);\n                    }\n                  }\n                >\n                  <Box direction=\"row\" gap=\"medium\">\n                    <FormField label=\"Leaving from\" name=\"originplace\" required>\n                      <TextInput name=\"originplace\" suggestions={this.state.airportNames} />\n                    </FormField>\n                    <FormField label=\"Going to\" name=\"destinationplace\" required>\n                      <TextInput name=\"destinationplace\" suggestions={this.state.airportNames} />\n                    </FormField>\n                    <FormField name=\"outbound\" label=\"Departing\" required>\n                      <DateInput format=\"mm/dd/yyyy\" label=\"Departing\" name=\"outbound\"/>\n                    </FormField>\n                    <FormField name=\"inbound\" label=\"Returning\">\n                      <DateInput format=\"mm/dd/yyyy\" label=\"Returning\" name=\"inbound\"/>\n                    </FormField>\n                    <Box alignSelf=\"center\">\n                      <Button type=\"submit\" label=\"Search\" primary margin=\"xsmall\"/>\n                      <Button type=\"reset\" label=\"Reset\" margin=\"xsmall\"/>\n                    </Box>\n                  </Box>\n                </Form>\n                {this.state.flights.map((flight) => {\n                  return (\n                    <Box justify='center' direction=\"row\" margin=\"small\">\n                      <Card height=\"xsmall\" fill=\"horizontal\" basis=\"2/3\" background=\"light-1\" pad=\"small\">\n                        <CardHeader fill=\"horizontal\">\n                          <Text size=\"xlarge\" color=\"neutral-3\">{flight.carrier}</Text><Text size=\"2xl\" weight=\"bold\">{this.state.currencySymbol}{flight.price}</Text>\n                        </CardHeader>\n                        <CardBody>\n                          <Text weight=\"bold\" size=\"small\">{flight.name} ({flight.symbol})</Text>\n                        </CardBody>\n                      </Card>\n                    </Box>\n                  )\n                })}\n              </Box>\n            </Box>\n          {(!this.state.showSidebar || size !== 'small') ? (\n            <Collapsible direction=\"horizontal\" open={this.state.showSidebar}>\n              <Box\n                 flex\n                 width='medium'\n                 background='light-2'\n                 elevation='small'\n                 align='center'\n                 justify='center'\n                 direction=\"column\"\n              >\n                <Form\n                  value={this.state.value2}\n                  onChange={value => {\n                    this.suggestCurrency(value.currency);\n                    this.setState({\n                      value2: value,\n                    });\n                  }}\n                  onSubmit={event =>\n                    {\n                      var newCurrency = myCurrency.find(item => item.Code === event.value.currency.toUpperCase());\n                      var newStr = \"Select Currency (\" + newCurrency.Code + \")\";\n                      this.setState({\n                        value2: {\n                          currency: \"\"\n                        },\n                        currency: newCurrency.Code,\n                        currencySymbol: newCurrency.Symbol,\n                        currencyFormLabel: newStr,\n                        showSidebar: false\n                      })\n                    }\n                  }\n                >\n                  <FormField label={this.state.currencyFormLabel} name=\"currency\" required>\n                    <TextInput name=\"currency\" suggestions={this.state.currencyArr} />\n                  </FormField>\n                  <Box alignSelf=\"center\">\n                    <Button type=\"submit\" label=\"Enter\" primary margin=\"xsmall\"/>\n                  </Box>\n                </Form>\n              </Box>\n            </Collapsible>\n          ): (\n            <Layer>\n              <Box\n                 background='light-2'\n                 tag='header'\n                 justify='end'\n                 align='center'\n                 direction='row'\n               >\n                 <Button\n                   icon={<FormClose />}\n                   onClick={() => this.setState({\n                     showSidebar: false\n                   })}\n                 />\n               </Box>\n              <Box\n                fill\n                background='light-2'\n                align='center'\n                justify='center'\n              >\n              sidebar\n              </Box>\n            </Layer>\n          )}\n          </Box>\n        </Box>\n      )}\n      </ResponsiveContext.Consumer>\n      </Grommet>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}