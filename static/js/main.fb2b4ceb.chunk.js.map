{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["theme","global","colors","brand","focus","font","family","size","height","defaultValue","originplace","destinationplace","inbound","outbound","AppBar","props","Box","tag","direction","align","justify","background","pad","left","right","vertical","elevation","style","zIndex","myCurrency","App","state","showSidebar","value","flights","originVal","currency","currencyFormLabel","currencySymbol","airportNames","currencyArr","value2","create","bind","createSuggestions","createCurrency","suggestCurrency","substr","indexOf","fetch","then","response","json","console","log","newFlights","i","Quotes","length","newFlight","carrier","price","Carriers","find","item","CarrierId","OutboundLeg","CarrierIds","departing","Places","PlaceId","OriginId","returning","DestinationId","Name","MinPrice","originName","originSymbol","IataCode","destinationSymbol","destinationName","push","setState","catch","err","newAirportNames","suggestions","PlaceName","Currencies","error","curr","Code","includes","toUpperCase","this","Grommet","full","ResponsiveContext","Consumer","fill","Heading","level","margin","Button","color","label","onClick","alignSelf","flex","overflow","horizontal","Form","onChange","onReset","event","onSubmit","gap","FormField","name","required","TextInput","DateInput","format","type","primary","InfiniteScroll","items","Card","basis","CardHeader","Text","weight","CardBody","FormNextLink","Layer","icon","FormClose","Collapsible","open","width","newCurrency","newStr","Symbol","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb2b4ceb.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport {\n Box,\n Button,\n Collapsible,\n Heading,\n Grommet,\n Layer,\n ResponsiveContext,\n Form,\n FormField,\n TextInput,\n DateInput,\n Card,\n CardHeader,\n CardBody,\n CardFooter,\n Text,\n InfiniteScroll\n} from 'grommet';\nimport { FormClose, Configure, Ticket, FormNextLink } from 'grommet-icons';\n\nconst theme = {\n  global: {\n    colors: {\n      brand: '#00739D',\n      focus: '#00739D'\n    },\n    font: {\n      family: 'Roboto',\n      size: '18px',\n      height: '20px',\n    },\n  },\n};\n\nconst defaultValue = {\n  originplace: '',\n  destinationplace: '',\n  inbound: '',\n  outbound: '',\n};\n\nconst AppBar = (props) => (\n  <Box\n    tag='header'\n    direction='row'\n    align='center'\n    justify='between'\n    background='brand'\n    pad={{ left: 'medium', right: 'small', vertical: 'small' }}\n    elevation='medium'\n    style={{ zIndex: '1' }}\n    {...props}\n  />\n);\n\nvar myCurrency = {}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      showSidebar: false,\n      value: defaultValue,\n      flights: [],\n      originVal: \"\",\n      currency: \"USD\",\n      currencyFormLabel: \"Select Currency (USD)\",\n      currencySymbol: \"$\",\n      airportNames: [],\n      currencyArr: [],\n      value2: {\n        currency: \"\"\n      },\n    }\n    this.create = this.create.bind(this);\n    this.createSuggestions = this.createSuggestions.bind(this);\n    this.createCurrency = this.createCurrency.bind(this);\n    this.suggestCurrency = this.suggestCurrency.bind(this);\n    this.createCurrency();\n  }\n\n  create(value, currency) {\n    // get all entities - GET\n    const originplace = value.originplace.substr(value.originplace.indexOf(\"(\")+1, value.originplace.indexOf(\")\"));\n    const destinationplace = value.destinationplace.substr(value.destinationplace.indexOf(\"(\")+1, value.destinationplace.indexOf(\")\"));\n    const outbound = value.outbound.substr(0, value.outbound.indexOf('T'));\n    const inbound = \"/\" + value.inbound.substr(0, value.outbound.indexOf('T'));\n    fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/browseroutes/v1.0/US/${currency}/en-US/${originplace}/${destinationplace}/${outbound}${inbound}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n        \"x-rapidapi-key\": \"ed870dc8bcmsheb9498735096d60p1ac767jsn0505c11878f0\"\n      }\n    })\n    .then(response => response.json())\n    .then(response => {\n      console.log(response);\n      var newFlights = [];\n      for(var i = 0; i<response.Quotes.length; i++){\n        var newFlight = {carrier: \"\", price: \"\"}\n        var carrier = response.Carriers.find(item => item.CarrierId === response.Quotes[i].OutboundLeg.CarrierIds[0]);\n        var departing = response.Places.find(item => item.PlaceId === response.Quotes[i].OutboundLeg.OriginId);\n        var returning = response.Places.find(item => item.PlaceId === response.Quotes[i].OutboundLeg.DestinationId);\n        newFlight.carrier = carrier.Name;\n        newFlight.price = response.Quotes[i].MinPrice;\n        newFlight.originName = departing.Name;\n        newFlight.originSymbol = departing.IataCode;\n        newFlight.destinationSymbol = returning.IataCode;\n        newFlight.destinationName = returning.Name;\n        newFlights.push(newFlight);\n      }\n      this.setState({\n        flights: newFlights,\n      });\n    })\n    .catch(err => { console.log(err);\n    });\n  }\n\n  createSuggestions(value){\n    fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/autosuggest/v1.0/US/USD/en-US/?query=${value}`, {\n      \"method\": \"GET\",\n      \"headers\": {\n        \"x-rapidapi-key\": \"2cb41ceb4bmsh64790deead62888p18e177jsn0e5c901f9ff5\",\n      \t\"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\",\n      \t\"useQueryString\": true\n      }\n    })\n    .then(response => response.json())\n    .then(response => {\n      var newAirportNames = [];\n      var suggestions = response.Places;\n      for(var i = 0; i<suggestions.length; i++){\n        newAirportNames[i] = suggestions[i].PlaceName + \" (\" + suggestions[i].PlaceId + \")\";\n      }\n      this.setState({\n        airportNames: newAirportNames\n      })\n    })\n    .catch(err => { console.log(err);\n    });\n  }\n\n  createCurrency(){\n    fetch(`https://skyscanner-skyscanner-flight-search-v1.p.rapidapi.com/apiservices/reference/v1.0/currencies`, {\n    \t\"method\": \"GET\",\n    \t\"headers\": {\n    \t\t\"x-rapidapi-key\": \"2cb41ceb4bmsh64790deead62888p18e177jsn0e5c901f9ff5\",\n    \t\t\"x-rapidapi-host\": \"skyscanner-skyscanner-flight-search-v1.p.rapidapi.com\"\n    \t}\n    })\n    .then(response => response.json())\n    .then(response => {\n      myCurrency = response.Currencies;\n    })\n    .catch(err => {\n    \tconsole.error(err);\n    });\n  }\n\n  suggestCurrency(value){\n    var curr = []\n    for(var i=0; i<myCurrency.length; i++){\n      var item = myCurrency[i];\n      if(item.Code.includes(value.toUpperCase())){\n        curr.push(item.Code);\n      }\n      if(curr.length > 8) break;\n    };\n    console.log(curr);\n    this.setState({\n      currencyArr: curr\n    })\n  }\n\n  render() {\n    return (\n      <Grommet theme={theme} full>\n      <ResponsiveContext.Consumer>\n      {size => (\n        <Box fill>\n          <AppBar>\n            <Heading level='3' margin='none'>Flight-Saver</Heading>\n            <Button\n              color = \"light-1\"\n              label={this.state.currency}\n              onClick={() => {\n                this.setState({\n                  showSidebar: !this.state.showSidebar\n                })\n              }}\n            />\n          </AppBar>\n          <Box direction='row' alignSelf=\"center\" flex overflow={{ horizontal: 'hidden' }}>\n            <Box alignSelf=\"start\" justify='center' direction=\"column\" margin=\"medium\">\n              <Box justify='stretch'>\n                <Form\n                  value={this.state.value}\n                  onChange={value => {\n                    if(this.state.originVal !== value.originplace) this.createSuggestions(value.originplace);\n                    else this.createSuggestions(value.destinationplace);\n                    this.setState({\n                      value: value,\n                      originVal: value.originplace\n                    });\n                  }}\n                  onReset={event => {\n                    this.setState({\n                      value: defaultValue,\n                      flights: []\n                    })\n                  }\n                  }\n                  onSubmit={event =>\n                    {\n                      this.create(event.value, this.state.currency);\n                    }\n                  }\n                >\n                  <Box direction=\"row\" gap=\"medium\">\n                    <FormField label=\"Leaving from\" name=\"originplace\" required>\n                      <TextInput name=\"originplace\" suggestions={this.state.airportNames} />\n                    </FormField>\n                    <FormField label=\"Going to\" name=\"destinationplace\" required>\n                      <TextInput name=\"destinationplace\" suggestions={this.state.airportNames} />\n                    </FormField>\n                    <FormField name=\"outbound\" label=\"Departing\" required>\n                      <DateInput format=\"mm/dd/yyyy\" label=\"Departing\" name=\"outbound\"/>\n                    </FormField>\n                    <FormField name=\"inbound\" label=\"Returning\">\n                      <DateInput format=\"mm/dd/yyyy\" label=\"Returning\" name=\"inbound\"/>\n                    </FormField>\n                    <Box alignSelf=\"center\">\n                      <Button type=\"submit\" label=\"Search\" primary margin=\"xsmall\"/>\n                      <Button type=\"reset\" label=\"Reset\" margin=\"xsmall\"/>\n                    </Box>\n                  </Box>\n                </Form>\n              </Box>\n              <Box overflow=\"auto\" margin=\"medium\" fill=\"vertical\">\n                <InfiniteScroll items={this.state.flights}>\n                  {(item) => (\n                    <Box justify='center' direction=\"row\" margin=\"small\" flex={false}>\n                      <Card height=\"xsmall\" fill=\"horizontal\" basis=\"2/3\" background=\"light-1\" pad=\"small\">\n                        <CardHeader fill=\"horizontal\">\n                          <Text size=\"xlarge\" color=\"neutral-3\">{item.carrier}</Text><Text size=\"2xl\" weight=\"bold\">{this.state.currencySymbol}{item.price}</Text>\n                        </CardHeader>\n                        <CardBody>\n                          <Text weight=\"bold\" size=\"small\">{item.originName} ({item.originSymbol}) <FormNextLink/> {item.destinationName} ({item.destinationSymbol})</Text>\n                        </CardBody>\n                      </Card>\n                    </Box>\n                  )}\n                </InfiniteScroll>\n              </Box>\n            </Box>\n          {(!this.state.showSidebar || size !== 'small') ? (\n            <Collapsible direction=\"horizontal\" open={this.state.showSidebar}>\n              <Box\n                 flex\n                 width='medium'\n                 background='light-2'\n                 elevation='small'\n                 align='center'\n                 justify='center'\n                 direction=\"column\"\n              >\n                <Form\n                  value={this.state.value2}\n                  onChange={value => {\n                    this.suggestCurrency(value.currency);\n                    this.setState({\n                      value2: value,\n                    });\n                  }}\n                  onSubmit={event =>\n                    {\n                      var newCurrency = myCurrency.find(item => item.Code === event.value.currency.toUpperCase());\n                      var newStr = \"Select Currency (\" + newCurrency.Code + \")\";\n                      this.setState({\n                        value2: {\n                          currency: \"\"\n                        },\n                        currency: newCurrency.Code,\n                        currencySymbol: newCurrency.Symbol,\n                        currencyFormLabel: newStr,\n                        showSidebar: false\n                      })\n                      this.create(this.state.value, newCurrency.Code);\n                    }\n                  }\n                >\n                  <FormField label={this.state.currencyFormLabel} name=\"currency\" required>\n                    <TextInput name=\"currency\" suggestions={this.state.currencyArr} />\n                  </FormField>\n                  <Box alignSelf=\"center\">\n                    <Button type=\"submit\" label=\"Enter\" primary margin=\"xsmall\"/>\n                  </Box>\n                </Form>\n              </Box>\n            </Collapsible>\n          ): (\n            <Layer>\n              <Box\n                 background='light-2'\n                 tag='header'\n                 justify='end'\n                 align='center'\n                 direction='row'\n               >\n                 <Button\n                   icon={<FormClose />}\n                   onClick={() => this.setState({\n                     showSidebar: false\n                   })}\n                 />\n               </Box>\n              <Box\n                fill\n                background='light-2'\n                align='center'\n                justify='center'\n              >\n              sidebar\n              </Box>\n            </Layer>\n          )}\n          </Box>\n        </Box>\n      )}\n      </ResponsiveContext.Consumer>\n      </Grommet>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}